openapi: 3.1.0
info:
  title: Customer Service API
  description: "Demo: type-safe generic API responses with OpenAPI"
  version: 0.6.1
servers:
  - url: http://localhost:8084/customer-service
    description: Local service URL
paths:
  /v1/customers/{customerId}:
    get:
      tags:
        - customer-controller
      operationId: getCustomer
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ServiceResponseCustomerDto"
    put:
      tags:
        - customer-controller
      operationId: updateCustomer
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerUpdateRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ServiceResponseCustomerUpdateResponse"
    delete:
      tags:
        - customer-controller
      operationId: deleteCustomer
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ServiceResponseCustomerDeleteResponse"
  /v1/customers:
    get:
      tags:
        - customer-controller
      operationId: getCustomers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ServiceResponseCustomerListResponse"
    post:
      tags:
        - customer-controller
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerCreateRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ServiceResponseCustomerCreateResponse"
components:
  schemas:
    CustomerUpdateRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
          minLength: 2
        email:
          type: string
          format: email
          minLength: 1
      required:
        - email
        - name
    CustomerDto:
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        name:
          type: string
        email:
          type: string
    CustomerUpdateResponse:
      type: object
      properties:
        customer:
          $ref: "#/components/schemas/CustomerDto"
        updatedAt:
          type: string
          format: date-time
    ErrorDetail:
      type: object
      properties:
        errorCode:
          type: string
        message:
          type: string
    ServiceResponseCustomerUpdateResponse:
      allOf:
        - $ref: "#/components/schemas/ServiceResponse"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/CustomerUpdateResponse"
      x-api-wrapper: true
      x-api-wrapper-datatype: CustomerUpdateResponse
    CustomerCreateRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 80
          minLength: 2
        email:
          type: string
          format: email
          minLength: 1
      required:
        - email
        - name
    CustomerCreateResponse:
      type: object
      properties:
        customer:
          $ref: "#/components/schemas/CustomerDto"
        createdAt:
          type: string
          format: date-time
    ServiceResponseCustomerCreateResponse:
      allOf:
        - $ref: "#/components/schemas/ServiceResponse"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/CustomerCreateResponse"
      x-api-wrapper: true
      x-api-wrapper-datatype: CustomerCreateResponse
    CustomerListResponse:
      type: object
      properties:
        customers:
          type: array
          items:
            $ref: "#/components/schemas/CustomerDto"
    ServiceResponseCustomerListResponse:
      allOf:
        - $ref: "#/components/schemas/ServiceResponse"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/CustomerListResponse"
      x-api-wrapper: true
      x-api-wrapper-datatype: CustomerListResponse
    ServiceResponseCustomerDto:
      allOf:
        - $ref: "#/components/schemas/ServiceResponse"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/CustomerDto"
      x-api-wrapper: true
      x-api-wrapper-datatype: CustomerDto
    CustomerDeleteResponse:
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        deletedAt:
          type: string
          format: date-time
    ServiceResponseCustomerDeleteResponse:
      allOf:
        - $ref: "#/components/schemas/ServiceResponse"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/CustomerDeleteResponse"
      x-api-wrapper: true
      x-api-wrapper-datatype: CustomerDeleteResponse
    ServiceResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              errorCode:
                type: string
              message:
                type: string
    ServiceResponseVoid:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        data:
          type: object
        errors:
          type: array
          items:
            type: object
            properties:
              errorCode:
                type: string
              message:
                type: string
