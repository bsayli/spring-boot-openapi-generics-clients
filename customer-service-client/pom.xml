<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.github.bsayli</groupId>
    <artifactId>customer-service-client</artifactId>
    <version>0.3.0</version>
    <name>customer-service-client</name>
    <description>Generated client (RestClient) using generics-aware OpenAPI templates</description>
    <packaging>jar</packaging>

    <properties>
        <java.version>21</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Tooling versions -->
        <openapi.generator.version>7.14.0</openapi.generator.version>
        <maven.compiler.plugin.version>3.13.0</maven.compiler.plugin.version>
        <build.helper.plugin.version>3.6.0</build.helper.plugin.version>

        <!-- Libraries used by generated code -->
        <spring.framework.version>6.2.10</spring.framework.version> <!-- for RestClient -->
        <jackson.version>2.18.4</jackson.version>
        <jakarta.validation.version>3.0.2</jakarta.validation.version>
        <jakarta.annotation-api.version>2.1.1</jakarta.annotation-api.version>
        <mockwebserver.version>5.1.0</mockwebserver.version>
        <junit-jupiter.version>5.13.4</junit-jupiter.version>
    </properties>

    <dependencies>
        <!-- Generated invoker uses Spring Framework RestClient -->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.framework.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.framework.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>${jakarta.validation.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>${jakarta.annotation-api.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Spring test utilities -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.framework.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- JUnit 5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- OkHttp MockWebServer -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver</artifactId>
            <version>${mockwebserver.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <!-- Generate client sources from OpenAPI spec using custom templates -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${openapi.generator.version}</version>
                <executions>
                    <execution>
                        <id>generate-client</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- Use a checked-in spec; later you can overwrite this file by curling /v3/api-docs.yaml -->
                            <inputSpec>${project.basedir}/src/main/resources/customer-api-docs.yaml</inputSpec>

                            <generatorName>java</generatorName>
                            <library>restclient</library>

                            <!-- Where generated code will be placed -->
                            <output>${project.build.directory}/generated-sources/openapi</output>

                            <!-- Packages for generated code -->
                            <apiPackage>io.github.bsayli.openapi.client.generated.api</apiPackage>
                            <modelPackage>io.github.bsayli.openapi.client.generated.dto</modelPackage>
                            <invokerPackage>io.github.bsayli.openapi.client.generated.invoker</invokerPackage>

                            <!-- Use our custom templates that implement generics-aware wrappers -->
                            <templateDirectory>${project.basedir}/src/main/resources/openapi-templates
                            </templateDirectory>

                            <!-- Keep output lean -->
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <generateApiDocumentation>false</generateApiDocumentation>
                            <generateApiTests>false</generateApiTests>
                            <generateModelDocumentation>false</generateModelDocumentation>
                            <generateModelTests>false</generateModelTests>
                            <cleanupOutput>true</cleanupOutput>
                            <skipValidateSpec>false</skipValidateSpec>


                            <!-- Generator options -->
                            <configOptions>
                                <useSpringBoot3>true</useSpringBoot3>
                                <useJakartaEe>true</useJakartaEe>
                                <serializationLibrary>jackson</serializationLibrary>
                                <dateLibrary>java8</dateLibrary>
                                <useBeanValidation>true</useBeanValidation>
                                <openApiNullable>false</openApiNullable>
                                <sourceFolder>src/gen/java/main</sourceFolder>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Add the generated sources to the compile path -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build.helper.plugin.version}</version>
                <executions>
                    <execution>
                        <id>add-generated-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/openapi/src/gen/java/main</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Java compiler setup -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <release>${java.version}</release>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>